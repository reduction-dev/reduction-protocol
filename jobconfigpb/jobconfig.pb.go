// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        v5.29.3
// source: jobconfigpb/jobconfig.proto

package jobconfigpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EmbeddedSource_GeneratorType int32

const (
	EmbeddedSource_GENERATOR_TYPE_UNSPECIFIED EmbeddedSource_GeneratorType = 0
	EmbeddedSource_GENERATOR_TYPE_SEQUENCE    EmbeddedSource_GeneratorType = 1
)

// Enum value maps for EmbeddedSource_GeneratorType.
var (
	EmbeddedSource_GeneratorType_name = map[int32]string{
		0: "GENERATOR_TYPE_UNSPECIFIED",
		1: "GENERATOR_TYPE_SEQUENCE",
	}
	EmbeddedSource_GeneratorType_value = map[string]int32{
		"GENERATOR_TYPE_UNSPECIFIED": 0,
		"GENERATOR_TYPE_SEQUENCE":    1,
	}
)

func (x EmbeddedSource_GeneratorType) Enum() *EmbeddedSource_GeneratorType {
	p := new(EmbeddedSource_GeneratorType)
	*p = x
	return p
}

func (x EmbeddedSource_GeneratorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EmbeddedSource_GeneratorType) Descriptor() protoreflect.EnumDescriptor {
	return file_jobconfigpb_jobconfig_proto_enumTypes[0].Descriptor()
}

func (EmbeddedSource_GeneratorType) Type() protoreflect.EnumType {
	return &file_jobconfigpb_jobconfig_proto_enumTypes[0]
}

func (x EmbeddedSource_GeneratorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EmbeddedSource_GeneratorType.Descriptor instead.
func (EmbeddedSource_GeneratorType) EnumDescriptor() ([]byte, []int) {
	return file_jobconfigpb_jobconfig_proto_rawDescGZIP(), []int{8, 0}
}

// JobConfig is the configuration needed to run a job
type JobConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Job           *Job                   `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	Sources       []*Source              `protobuf:"bytes,2,rep,name=sources,proto3" json:"sources,omitempty"`
	Sinks         []*Sink                `protobuf:"bytes,3,rep,name=sinks,proto3" json:"sinks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobConfig) Reset() {
	*x = JobConfig{}
	mi := &file_jobconfigpb_jobconfig_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobConfig) ProtoMessage() {}

func (x *JobConfig) ProtoReflect() protoreflect.Message {
	mi := &file_jobconfigpb_jobconfig_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobConfig.ProtoReflect.Descriptor instead.
func (*JobConfig) Descriptor() ([]byte, []int) {
	return file_jobconfigpb_jobconfig_proto_rawDescGZIP(), []int{0}
}

func (x *JobConfig) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *JobConfig) GetSources() []*Source {
	if x != nil {
		return x.Sources
	}
	return nil
}

func (x *JobConfig) GetSinks() []*Sink {
	if x != nil {
		return x.Sinks
	}
	return nil
}

// Job contains job's parameters
type Job struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	WorkerCount              *Int32Var              `protobuf:"bytes,1,opt,name=worker_count,json=workerCount,proto3" json:"worker_count,omitempty"`
	KeyGroupCount            int32                  `protobuf:"varint,2,opt,name=key_group_count,json=keyGroupCount,proto3" json:"key_group_count,omitempty"`
	WorkingStorageLocation   *StringVar             `protobuf:"bytes,3,opt,name=working_storage_location,json=workingStorageLocation,proto3" json:"working_storage_location,omitempty"`
	SavepointStorageLocation *StringVar             `protobuf:"bytes,4,opt,name=savepoint_storage_location,json=savepointStorageLocation,proto3" json:"savepoint_storage_location,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *Job) Reset() {
	*x = Job{}
	mi := &file_jobconfigpb_jobconfig_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Job) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job) ProtoMessage() {}

func (x *Job) ProtoReflect() protoreflect.Message {
	mi := &file_jobconfigpb_jobconfig_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Job.ProtoReflect.Descriptor instead.
func (*Job) Descriptor() ([]byte, []int) {
	return file_jobconfigpb_jobconfig_proto_rawDescGZIP(), []int{1}
}

func (x *Job) GetWorkerCount() *Int32Var {
	if x != nil {
		return x.WorkerCount
	}
	return nil
}

func (x *Job) GetKeyGroupCount() int32 {
	if x != nil {
		return x.KeyGroupCount
	}
	return 0
}

func (x *Job) GetWorkingStorageLocation() *StringVar {
	if x != nil {
		return x.WorkingStorageLocation
	}
	return nil
}

func (x *Job) GetSavepointStorageLocation() *StringVar {
	if x != nil {
		return x.SavepointStorageLocation
	}
	return nil
}

// Source represents any type of input source
type Source struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Id    string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are valid to be assigned to Config:
	//
	//	*Source_Stdio
	//	*Source_Kinesis
	//	*Source_HttpApi
	//	*Source_Embedded
	Config        isSource_Config `protobuf_oneof:"config"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Source) Reset() {
	*x = Source{}
	mi := &file_jobconfigpb_jobconfig_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Source) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Source) ProtoMessage() {}

func (x *Source) ProtoReflect() protoreflect.Message {
	mi := &file_jobconfigpb_jobconfig_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Source.ProtoReflect.Descriptor instead.
func (*Source) Descriptor() ([]byte, []int) {
	return file_jobconfigpb_jobconfig_proto_rawDescGZIP(), []int{2}
}

func (x *Source) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Source) GetConfig() isSource_Config {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *Source) GetStdio() *StdioSource {
	if x != nil {
		if x, ok := x.Config.(*Source_Stdio); ok {
			return x.Stdio
		}
	}
	return nil
}

func (x *Source) GetKinesis() *KinesisSource {
	if x != nil {
		if x, ok := x.Config.(*Source_Kinesis); ok {
			return x.Kinesis
		}
	}
	return nil
}

func (x *Source) GetHttpApi() *HTTPAPISource {
	if x != nil {
		if x, ok := x.Config.(*Source_HttpApi); ok {
			return x.HttpApi
		}
	}
	return nil
}

func (x *Source) GetEmbedded() *EmbeddedSource {
	if x != nil {
		if x, ok := x.Config.(*Source_Embedded); ok {
			return x.Embedded
		}
	}
	return nil
}

type isSource_Config interface {
	isSource_Config()
}

type Source_Stdio struct {
	Stdio *StdioSource `protobuf:"bytes,2,opt,name=stdio,proto3,oneof"`
}

type Source_Kinesis struct {
	Kinesis *KinesisSource `protobuf:"bytes,3,opt,name=kinesis,proto3,oneof"`
}

type Source_HttpApi struct {
	HttpApi *HTTPAPISource `protobuf:"bytes,4,opt,name=http_api,json=httpApi,proto3,oneof"`
}

type Source_Embedded struct {
	Embedded *EmbeddedSource `protobuf:"bytes,5,opt,name=embedded,proto3,oneof"`
}

func (*Source_Stdio) isSource_Config() {}

func (*Source_Kinesis) isSource_Config() {}

func (*Source_HttpApi) isSource_Config() {}

func (*Source_Embedded) isSource_Config() {}

// Sink represents any type of output sink
type Sink struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Id    string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are valid to be assigned to Config:
	//
	//	*Sink_Stdio
	//	*Sink_HttpApi
	//	*Sink_Memory
	Config        isSink_Config `protobuf_oneof:"config"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Sink) Reset() {
	*x = Sink{}
	mi := &file_jobconfigpb_jobconfig_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Sink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sink) ProtoMessage() {}

func (x *Sink) ProtoReflect() protoreflect.Message {
	mi := &file_jobconfigpb_jobconfig_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sink.ProtoReflect.Descriptor instead.
func (*Sink) Descriptor() ([]byte, []int) {
	return file_jobconfigpb_jobconfig_proto_rawDescGZIP(), []int{3}
}

func (x *Sink) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Sink) GetConfig() isSink_Config {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *Sink) GetStdio() *StdioSink {
	if x != nil {
		if x, ok := x.Config.(*Sink_Stdio); ok {
			return x.Stdio
		}
	}
	return nil
}

func (x *Sink) GetHttpApi() *HTTPAPISink {
	if x != nil {
		if x, ok := x.Config.(*Sink_HttpApi); ok {
			return x.HttpApi
		}
	}
	return nil
}

func (x *Sink) GetMemory() *MemorySink {
	if x != nil {
		if x, ok := x.Config.(*Sink_Memory); ok {
			return x.Memory
		}
	}
	return nil
}

type isSink_Config interface {
	isSink_Config()
}

type Sink_Stdio struct {
	Stdio *StdioSink `protobuf:"bytes,2,opt,name=stdio,proto3,oneof"`
}

type Sink_HttpApi struct {
	HttpApi *HTTPAPISink `protobuf:"bytes,3,opt,name=http_api,json=httpApi,proto3,oneof"`
}

type Sink_Memory struct {
	Memory *MemorySink `protobuf:"bytes,4,opt,name=memory,proto3,oneof"`
}

func (*Sink_Stdio) isSink_Config() {}

func (*Sink_HttpApi) isSink_Config() {}

func (*Sink_Memory) isSink_Config() {}

// Source Configs
type StdioSource struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Framing       *Framing               `protobuf:"bytes,1,opt,name=framing,proto3" json:"framing,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StdioSource) Reset() {
	*x = StdioSource{}
	mi := &file_jobconfigpb_jobconfig_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StdioSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StdioSource) ProtoMessage() {}

func (x *StdioSource) ProtoReflect() protoreflect.Message {
	mi := &file_jobconfigpb_jobconfig_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StdioSource.ProtoReflect.Descriptor instead.
func (*StdioSource) Descriptor() ([]byte, []int) {
	return file_jobconfigpb_jobconfig_proto_rawDescGZIP(), []int{4}
}

func (x *StdioSource) GetFraming() *Framing {
	if x != nil {
		return x.Framing
	}
	return nil
}

// Framing specifies how to separate messages for the stdio source
type Framing struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Scheme:
	//
	//	*Framing_LengthEncoded
	//	*Framing_Delimited
	Scheme        isFraming_Scheme `protobuf_oneof:"scheme"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Framing) Reset() {
	*x = Framing{}
	mi := &file_jobconfigpb_jobconfig_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Framing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Framing) ProtoMessage() {}

func (x *Framing) ProtoReflect() protoreflect.Message {
	mi := &file_jobconfigpb_jobconfig_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Framing.ProtoReflect.Descriptor instead.
func (*Framing) Descriptor() ([]byte, []int) {
	return file_jobconfigpb_jobconfig_proto_rawDescGZIP(), []int{5}
}

func (x *Framing) GetScheme() isFraming_Scheme {
	if x != nil {
		return x.Scheme
	}
	return nil
}

func (x *Framing) GetLengthEncoded() *Framing_LengthEncodedScheme {
	if x != nil {
		if x, ok := x.Scheme.(*Framing_LengthEncoded); ok {
			return x.LengthEncoded
		}
	}
	return nil
}

func (x *Framing) GetDelimited() *Framing_DelimitedScheme {
	if x != nil {
		if x, ok := x.Scheme.(*Framing_Delimited); ok {
			return x.Delimited
		}
	}
	return nil
}

type isFraming_Scheme interface {
	isFraming_Scheme()
}

type Framing_LengthEncoded struct {
	LengthEncoded *Framing_LengthEncodedScheme `protobuf:"bytes,1,opt,name=length_encoded,json=lengthEncoded,proto3,oneof"`
}

type Framing_Delimited struct {
	Delimited *Framing_DelimitedScheme `protobuf:"bytes,2,opt,name=delimited,proto3,oneof"`
}

func (*Framing_LengthEncoded) isFraming_Scheme() {}

func (*Framing_Delimited) isFraming_Scheme() {}

type KinesisSource struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamArn     *StringVar             `protobuf:"bytes,1,opt,name=stream_arn,json=streamArn,proto3" json:"stream_arn,omitempty"`
	Endpoint      *StringVar             `protobuf:"bytes,2,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KinesisSource) Reset() {
	*x = KinesisSource{}
	mi := &file_jobconfigpb_jobconfig_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KinesisSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KinesisSource) ProtoMessage() {}

func (x *KinesisSource) ProtoReflect() protoreflect.Message {
	mi := &file_jobconfigpb_jobconfig_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KinesisSource.ProtoReflect.Descriptor instead.
func (*KinesisSource) Descriptor() ([]byte, []int) {
	return file_jobconfigpb_jobconfig_proto_rawDescGZIP(), []int{6}
}

func (x *KinesisSource) GetStreamArn() *StringVar {
	if x != nil {
		return x.StreamArn
	}
	return nil
}

func (x *KinesisSource) GetEndpoint() *StringVar {
	if x != nil {
		return x.Endpoint
	}
	return nil
}

type HTTPAPISource struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Addr          *StringVar             `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Topics        []string               `protobuf:"bytes,2,rep,name=topics,proto3" json:"topics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HTTPAPISource) Reset() {
	*x = HTTPAPISource{}
	mi := &file_jobconfigpb_jobconfig_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HTTPAPISource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPAPISource) ProtoMessage() {}

func (x *HTTPAPISource) ProtoReflect() protoreflect.Message {
	mi := &file_jobconfigpb_jobconfig_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTPAPISource.ProtoReflect.Descriptor instead.
func (*HTTPAPISource) Descriptor() ([]byte, []int) {
	return file_jobconfigpb_jobconfig_proto_rawDescGZIP(), []int{7}
}

func (x *HTTPAPISource) GetAddr() *StringVar {
	if x != nil {
		return x.Addr
	}
	return nil
}

func (x *HTTPAPISource) GetTopics() []string {
	if x != nil {
		return x.Topics
	}
	return nil
}

type EmbeddedSource struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	SplitCount    int32                        `protobuf:"varint,1,opt,name=split_count,json=splitCount,proto3" json:"split_count,omitempty"`
	BatchSize     int32                        `protobuf:"varint,2,opt,name=batch_size,json=batchSize,proto3" json:"batch_size,omitempty"`
	Generator     EmbeddedSource_GeneratorType `protobuf:"varint,3,opt,name=generator,proto3,enum=dev.reduction.jobconfig.EmbeddedSource_GeneratorType" json:"generator,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmbeddedSource) Reset() {
	*x = EmbeddedSource{}
	mi := &file_jobconfigpb_jobconfig_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmbeddedSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbeddedSource) ProtoMessage() {}

func (x *EmbeddedSource) ProtoReflect() protoreflect.Message {
	mi := &file_jobconfigpb_jobconfig_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbeddedSource.ProtoReflect.Descriptor instead.
func (*EmbeddedSource) Descriptor() ([]byte, []int) {
	return file_jobconfigpb_jobconfig_proto_rawDescGZIP(), []int{8}
}

func (x *EmbeddedSource) GetSplitCount() int32 {
	if x != nil {
		return x.SplitCount
	}
	return 0
}

func (x *EmbeddedSource) GetBatchSize() int32 {
	if x != nil {
		return x.BatchSize
	}
	return 0
}

func (x *EmbeddedSource) GetGenerator() EmbeddedSource_GeneratorType {
	if x != nil {
		return x.Generator
	}
	return EmbeddedSource_GENERATOR_TYPE_UNSPECIFIED
}

// Sink Configs
type StdioSink struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StdioSink) Reset() {
	*x = StdioSink{}
	mi := &file_jobconfigpb_jobconfig_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StdioSink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StdioSink) ProtoMessage() {}

func (x *StdioSink) ProtoReflect() protoreflect.Message {
	mi := &file_jobconfigpb_jobconfig_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StdioSink.ProtoReflect.Descriptor instead.
func (*StdioSink) Descriptor() ([]byte, []int) {
	return file_jobconfigpb_jobconfig_proto_rawDescGZIP(), []int{9}
}

type HTTPAPISink struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Addr          *StringVar             `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HTTPAPISink) Reset() {
	*x = HTTPAPISink{}
	mi := &file_jobconfigpb_jobconfig_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HTTPAPISink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPAPISink) ProtoMessage() {}

func (x *HTTPAPISink) ProtoReflect() protoreflect.Message {
	mi := &file_jobconfigpb_jobconfig_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTPAPISink.ProtoReflect.Descriptor instead.
func (*HTTPAPISink) Descriptor() ([]byte, []int) {
	return file_jobconfigpb_jobconfig_proto_rawDescGZIP(), []int{10}
}

func (x *HTTPAPISink) GetAddr() *StringVar {
	if x != nil {
		return x.Addr
	}
	return nil
}

type MemorySink struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MemorySink) Reset() {
	*x = MemorySink{}
	mi := &file_jobconfigpb_jobconfig_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemorySink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemorySink) ProtoMessage() {}

func (x *MemorySink) ProtoReflect() protoreflect.Message {
	mi := &file_jobconfigpb_jobconfig_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemorySink.ProtoReflect.Descriptor instead.
func (*MemorySink) Descriptor() ([]byte, []int) {
	return file_jobconfigpb_jobconfig_proto_rawDescGZIP(), []int{11}
}

type Framing_LengthEncodedScheme struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Framing_LengthEncodedScheme) Reset() {
	*x = Framing_LengthEncodedScheme{}
	mi := &file_jobconfigpb_jobconfig_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Framing_LengthEncodedScheme) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Framing_LengthEncodedScheme) ProtoMessage() {}

func (x *Framing_LengthEncodedScheme) ProtoReflect() protoreflect.Message {
	mi := &file_jobconfigpb_jobconfig_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Framing_LengthEncodedScheme.ProtoReflect.Descriptor instead.
func (*Framing_LengthEncodedScheme) Descriptor() ([]byte, []int) {
	return file_jobconfigpb_jobconfig_proto_rawDescGZIP(), []int{5, 0}
}

type Framing_DelimitedScheme struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Delimiter     []byte                 `protobuf:"bytes,1,opt,name=delimiter,proto3" json:"delimiter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Framing_DelimitedScheme) Reset() {
	*x = Framing_DelimitedScheme{}
	mi := &file_jobconfigpb_jobconfig_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Framing_DelimitedScheme) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Framing_DelimitedScheme) ProtoMessage() {}

func (x *Framing_DelimitedScheme) ProtoReflect() protoreflect.Message {
	mi := &file_jobconfigpb_jobconfig_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Framing_DelimitedScheme.ProtoReflect.Descriptor instead.
func (*Framing_DelimitedScheme) Descriptor() ([]byte, []int) {
	return file_jobconfigpb_jobconfig_proto_rawDescGZIP(), []int{5, 1}
}

func (x *Framing_DelimitedScheme) GetDelimiter() []byte {
	if x != nil {
		return x.Delimiter
	}
	return nil
}

var File_jobconfigpb_jobconfig_proto protoreflect.FileDescriptor

var file_jobconfigpb_jobconfig_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x6a, 0x6f, 0x62, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x70, 0x62, 0x2f, 0x6a, 0x6f,
	0x62, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x64,
	0x65, 0x76, 0x2e, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6a, 0x6f, 0x62,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x1c, 0x6a, 0x6f, 0x62, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x70, 0x62, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xab, 0x01, 0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x2e, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x6a, 0x6f, 0x62, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a,
	0x6f, 0x62, 0x12, 0x39, 0x0a, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x6a, 0x6f, 0x62, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x33, 0x0a,
	0x05, 0x73, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64,
	0x65, 0x76, 0x2e, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6a, 0x6f, 0x62,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x69, 0x6e, 0x6b, 0x52, 0x05, 0x73, 0x69, 0x6e,
	0x6b, 0x73, 0x22, 0xb3, 0x02, 0x0a, 0x03, 0x4a, 0x6f, 0x62, 0x12, 0x44, 0x0a, 0x0c, 0x77, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x6a, 0x6f, 0x62, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32,
	0x56, 0x61, 0x72, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x26, 0x0a, 0x0f, 0x6b, 0x65, 0x79, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6b, 0x65, 0x79, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x5c, 0x0a, 0x18, 0x77, 0x6f, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64, 0x65, 0x76,
	0x2e, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6a, 0x6f, 0x62, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x72, 0x52, 0x16,
	0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x60, 0x0a, 0x1a, 0x73, 0x61, 0x76, 0x65, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64, 0x65, 0x76,
	0x2e, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6a, 0x6f, 0x62, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x72, 0x52, 0x18,
	0x73, 0x61, 0x76, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb0, 0x02, 0x0a, 0x06, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x05, 0x73, 0x74, 0x64, 0x69, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x6a, 0x6f, 0x62, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x74, 0x64,
	0x69, 0x6f, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x48, 0x00, 0x52, 0x05, 0x73, 0x74, 0x64, 0x69,
	0x6f, 0x12, 0x42, 0x0a, 0x07, 0x6b, 0x69, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x6a, 0x6f, 0x62, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4b, 0x69, 0x6e,
	0x65, 0x73, 0x69, 0x73, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x48, 0x00, 0x52, 0x07, 0x6b, 0x69,
	0x6e, 0x65, 0x73, 0x69, 0x73, 0x12, 0x43, 0x0a, 0x08, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x61, 0x70,
	0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x72, 0x65,
	0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6a, 0x6f, 0x62, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x48, 0x54, 0x54, 0x50, 0x41, 0x50, 0x49, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x48,
	0x00, 0x52, 0x07, 0x68, 0x74, 0x74, 0x70, 0x41, 0x70, 0x69, 0x12, 0x45, 0x0a, 0x08, 0x65, 0x6d,
	0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x64,
	0x65, 0x76, 0x2e, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6a, 0x6f, 0x62,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x48, 0x00, 0x52, 0x08, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65,
	0x64, 0x42, 0x08, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xde, 0x01, 0x0a, 0x04,
	0x53, 0x69, 0x6e, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x05, 0x73, 0x74, 0x64, 0x69, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x6a, 0x6f, 0x62, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x74,
	0x64, 0x69, 0x6f, 0x53, 0x69, 0x6e, 0x6b, 0x48, 0x00, 0x52, 0x05, 0x73, 0x74, 0x64, 0x69, 0x6f,
	0x12, 0x41, 0x0a, 0x08, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x61, 0x70, 0x69, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x6a, 0x6f, 0x62, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x48, 0x54, 0x54,
	0x50, 0x41, 0x50, 0x49, 0x53, 0x69, 0x6e, 0x6b, 0x48, 0x00, 0x52, 0x07, 0x68, 0x74, 0x74, 0x70,
	0x41, 0x70, 0x69, 0x12, 0x3d, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x6a, 0x6f, 0x62, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x53, 0x69, 0x6e, 0x6b, 0x48, 0x00, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x42, 0x08, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x49, 0x0a, 0x0b,
	0x53, 0x74, 0x64, 0x69, 0x6f, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x07, 0x66,
	0x72, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x64,
	0x65, 0x76, 0x2e, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6a, 0x6f, 0x62,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x07,
	0x66, 0x72, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x22, 0x8c, 0x02, 0x0a, 0x07, 0x46, 0x72, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x12, 0x5d, 0x0a, 0x0e, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x5f, 0x65, 0x6e,
	0x63, 0x6f, 0x64, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x64, 0x65,
	0x76, 0x2e, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6a, 0x6f, 0x62, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x65, 0x48, 0x00, 0x52, 0x0d, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x45, 0x6e, 0x63, 0x6f, 0x64,
	0x65, 0x64, 0x12, 0x50, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x72, 0x65, 0x64, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6a, 0x6f, 0x62, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x46, 0x72, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65,
	0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x65, 0x64, 0x1a, 0x15, 0x0a, 0x13, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x45, 0x6e,
	0x63, 0x6f, 0x64, 0x65, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x1a, 0x2f, 0x0a, 0x0f, 0x44,
	0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x64, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x42, 0x08, 0x0a, 0x06,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x22, 0x92, 0x01, 0x0a, 0x0d, 0x4b, 0x69, 0x6e, 0x65, 0x73,
	0x69, 0x73, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x5f, 0x61, 0x72, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64,
	0x65, 0x76, 0x2e, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6a, 0x6f, 0x62,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x72,
	0x52, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x41, 0x72, 0x6e, 0x12, 0x3e, 0x0a, 0x08, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x64, 0x65, 0x76, 0x2e, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6a, 0x6f,
	0x62, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x72, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x5f, 0x0a, 0x0d, 0x48,
	0x54, 0x54, 0x50, 0x41, 0x50, 0x49, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x04,
	0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64, 0x65, 0x76,
	0x2e, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6a, 0x6f, 0x62, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x72, 0x52, 0x04,
	0x61, 0x64, 0x64, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x22, 0xf3, 0x01, 0x0a,
	0x0e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x53, 0x0a, 0x09, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x35, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x6a, 0x6f, 0x62, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x45, 0x6d, 0x62,
	0x65, 0x64, 0x64, 0x65, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x22, 0x4c, 0x0a, 0x0d, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x54,
	0x4f, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x54,
	0x4f, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x45, 0x51, 0x55, 0x45, 0x4e, 0x43, 0x45,
	0x10, 0x01, 0x22, 0x0b, 0x0a, 0x09, 0x53, 0x74, 0x64, 0x69, 0x6f, 0x53, 0x69, 0x6e, 0x6b, 0x22,
	0x45, 0x0a, 0x0b, 0x48, 0x54, 0x54, 0x50, 0x41, 0x50, 0x49, 0x53, 0x69, 0x6e, 0x6b, 0x12, 0x36,
	0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64,
	0x65, 0x76, 0x2e, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6a, 0x6f, 0x62,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x72,
	0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x22, 0x0c, 0x0a, 0x0a, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x53, 0x69, 0x6e, 0x6b, 0x42, 0x2e, 0x5a, 0x2c, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x64, 0x65, 0x76, 0x2f, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x6a, 0x6f, 0x62, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_jobconfigpb_jobconfig_proto_rawDescOnce sync.Once
	file_jobconfigpb_jobconfig_proto_rawDescData = file_jobconfigpb_jobconfig_proto_rawDesc
)

func file_jobconfigpb_jobconfig_proto_rawDescGZIP() []byte {
	file_jobconfigpb_jobconfig_proto_rawDescOnce.Do(func() {
		file_jobconfigpb_jobconfig_proto_rawDescData = protoimpl.X.CompressGZIP(file_jobconfigpb_jobconfig_proto_rawDescData)
	})
	return file_jobconfigpb_jobconfig_proto_rawDescData
}

var file_jobconfigpb_jobconfig_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_jobconfigpb_jobconfig_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_jobconfigpb_jobconfig_proto_goTypes = []any{
	(EmbeddedSource_GeneratorType)(0),   // 0: dev.reduction.jobconfig.EmbeddedSource.GeneratorType
	(*JobConfig)(nil),                   // 1: dev.reduction.jobconfig.JobConfig
	(*Job)(nil),                         // 2: dev.reduction.jobconfig.Job
	(*Source)(nil),                      // 3: dev.reduction.jobconfig.Source
	(*Sink)(nil),                        // 4: dev.reduction.jobconfig.Sink
	(*StdioSource)(nil),                 // 5: dev.reduction.jobconfig.StdioSource
	(*Framing)(nil),                     // 6: dev.reduction.jobconfig.Framing
	(*KinesisSource)(nil),               // 7: dev.reduction.jobconfig.KinesisSource
	(*HTTPAPISource)(nil),               // 8: dev.reduction.jobconfig.HTTPAPISource
	(*EmbeddedSource)(nil),              // 9: dev.reduction.jobconfig.EmbeddedSource
	(*StdioSink)(nil),                   // 10: dev.reduction.jobconfig.StdioSink
	(*HTTPAPISink)(nil),                 // 11: dev.reduction.jobconfig.HTTPAPISink
	(*MemorySink)(nil),                  // 12: dev.reduction.jobconfig.MemorySink
	(*Framing_LengthEncodedScheme)(nil), // 13: dev.reduction.jobconfig.Framing.LengthEncodedScheme
	(*Framing_DelimitedScheme)(nil),     // 14: dev.reduction.jobconfig.Framing.DelimitedScheme
	(*Int32Var)(nil),                    // 15: dev.reduction.jobconfig.Int32Var
	(*StringVar)(nil),                   // 16: dev.reduction.jobconfig.StringVar
}
var file_jobconfigpb_jobconfig_proto_depIdxs = []int32{
	2,  // 0: dev.reduction.jobconfig.JobConfig.job:type_name -> dev.reduction.jobconfig.Job
	3,  // 1: dev.reduction.jobconfig.JobConfig.sources:type_name -> dev.reduction.jobconfig.Source
	4,  // 2: dev.reduction.jobconfig.JobConfig.sinks:type_name -> dev.reduction.jobconfig.Sink
	15, // 3: dev.reduction.jobconfig.Job.worker_count:type_name -> dev.reduction.jobconfig.Int32Var
	16, // 4: dev.reduction.jobconfig.Job.working_storage_location:type_name -> dev.reduction.jobconfig.StringVar
	16, // 5: dev.reduction.jobconfig.Job.savepoint_storage_location:type_name -> dev.reduction.jobconfig.StringVar
	5,  // 6: dev.reduction.jobconfig.Source.stdio:type_name -> dev.reduction.jobconfig.StdioSource
	7,  // 7: dev.reduction.jobconfig.Source.kinesis:type_name -> dev.reduction.jobconfig.KinesisSource
	8,  // 8: dev.reduction.jobconfig.Source.http_api:type_name -> dev.reduction.jobconfig.HTTPAPISource
	9,  // 9: dev.reduction.jobconfig.Source.embedded:type_name -> dev.reduction.jobconfig.EmbeddedSource
	10, // 10: dev.reduction.jobconfig.Sink.stdio:type_name -> dev.reduction.jobconfig.StdioSink
	11, // 11: dev.reduction.jobconfig.Sink.http_api:type_name -> dev.reduction.jobconfig.HTTPAPISink
	12, // 12: dev.reduction.jobconfig.Sink.memory:type_name -> dev.reduction.jobconfig.MemorySink
	6,  // 13: dev.reduction.jobconfig.StdioSource.framing:type_name -> dev.reduction.jobconfig.Framing
	13, // 14: dev.reduction.jobconfig.Framing.length_encoded:type_name -> dev.reduction.jobconfig.Framing.LengthEncodedScheme
	14, // 15: dev.reduction.jobconfig.Framing.delimited:type_name -> dev.reduction.jobconfig.Framing.DelimitedScheme
	16, // 16: dev.reduction.jobconfig.KinesisSource.stream_arn:type_name -> dev.reduction.jobconfig.StringVar
	16, // 17: dev.reduction.jobconfig.KinesisSource.endpoint:type_name -> dev.reduction.jobconfig.StringVar
	16, // 18: dev.reduction.jobconfig.HTTPAPISource.addr:type_name -> dev.reduction.jobconfig.StringVar
	0,  // 19: dev.reduction.jobconfig.EmbeddedSource.generator:type_name -> dev.reduction.jobconfig.EmbeddedSource.GeneratorType
	16, // 20: dev.reduction.jobconfig.HTTPAPISink.addr:type_name -> dev.reduction.jobconfig.StringVar
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_jobconfigpb_jobconfig_proto_init() }
func file_jobconfigpb_jobconfig_proto_init() {
	if File_jobconfigpb_jobconfig_proto != nil {
		return
	}
	file_jobconfigpb_resolvable_proto_init()
	file_jobconfigpb_jobconfig_proto_msgTypes[2].OneofWrappers = []any{
		(*Source_Stdio)(nil),
		(*Source_Kinesis)(nil),
		(*Source_HttpApi)(nil),
		(*Source_Embedded)(nil),
	}
	file_jobconfigpb_jobconfig_proto_msgTypes[3].OneofWrappers = []any{
		(*Sink_Stdio)(nil),
		(*Sink_HttpApi)(nil),
		(*Sink_Memory)(nil),
	}
	file_jobconfigpb_jobconfig_proto_msgTypes[5].OneofWrappers = []any{
		(*Framing_LengthEncoded)(nil),
		(*Framing_Delimited)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_jobconfigpb_jobconfig_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_jobconfigpb_jobconfig_proto_goTypes,
		DependencyIndexes: file_jobconfigpb_jobconfig_proto_depIdxs,
		EnumInfos:         file_jobconfigpb_jobconfig_proto_enumTypes,
		MessageInfos:      file_jobconfigpb_jobconfig_proto_msgTypes,
	}.Build()
	File_jobconfigpb_jobconfig_proto = out.File
	file_jobconfigpb_jobconfig_proto_rawDesc = nil
	file_jobconfigpb_jobconfig_proto_goTypes = nil
	file_jobconfigpb_jobconfig_proto_depIdxs = nil
}
