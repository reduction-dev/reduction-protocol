// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        v5.29.3
// source: jobconfigpb/kafka.proto

package jobconfigpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type KafkaSource struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Kafkfa Consumer Group ID
	ConsumerGroup *StringVar `protobuf:"bytes,1,opt,name=consumer_group,json=consumerGroup,proto3" json:"consumer_group,omitempty"`
	// Brokers is a comma separated list of broker addresses
	Brokers *StringVar `protobuf:"bytes,2,opt,name=brokers,proto3" json:"brokers,omitempty"`
	// Topics is a comma separated list of Kafka topic names
	Topics        *StringVar `protobuf:"bytes,3,opt,name=topics,proto3" json:"topics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KafkaSource) Reset() {
	*x = KafkaSource{}
	mi := &file_jobconfigpb_kafka_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KafkaSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KafkaSource) ProtoMessage() {}

func (x *KafkaSource) ProtoReflect() protoreflect.Message {
	mi := &file_jobconfigpb_kafka_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KafkaSource.ProtoReflect.Descriptor instead.
func (*KafkaSource) Descriptor() ([]byte, []int) {
	return file_jobconfigpb_kafka_proto_rawDescGZIP(), []int{0}
}

func (x *KafkaSource) GetConsumerGroup() *StringVar {
	if x != nil {
		return x.ConsumerGroup
	}
	return nil
}

func (x *KafkaSource) GetBrokers() *StringVar {
	if x != nil {
		return x.Brokers
	}
	return nil
}

func (x *KafkaSource) GetTopics() *StringVar {
	if x != nil {
		return x.Topics
	}
	return nil
}

type KafkaSink struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Brokers is a comma separated list of broker addresses
	Brokers       *StringVar `protobuf:"bytes,1,opt,name=brokers,proto3" json:"brokers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KafkaSink) Reset() {
	*x = KafkaSink{}
	mi := &file_jobconfigpb_kafka_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KafkaSink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KafkaSink) ProtoMessage() {}

func (x *KafkaSink) ProtoReflect() protoreflect.Message {
	mi := &file_jobconfigpb_kafka_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KafkaSink.ProtoReflect.Descriptor instead.
func (*KafkaSink) Descriptor() ([]byte, []int) {
	return file_jobconfigpb_kafka_proto_rawDescGZIP(), []int{1}
}

func (x *KafkaSink) GetBrokers() *StringVar {
	if x != nil {
		return x.Brokers
	}
	return nil
}

var File_jobconfigpb_kafka_proto protoreflect.FileDescriptor

var file_jobconfigpb_kafka_proto_rawDesc = []byte{
	0x0a, 0x17, 0x6a, 0x6f, 0x62, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x70, 0x62, 0x2f, 0x6b, 0x61,
	0x66, 0x6b, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x64, 0x65, 0x76, 0x2e, 0x72,
	0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6a, 0x6f, 0x62, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x1a, 0x1c, 0x6a, 0x6f, 0x62, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x70, 0x62, 0x2f,
	0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xd2, 0x01, 0x0a, 0x0b, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x49, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x72,
	0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6a, 0x6f, 0x62, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x72, 0x52, 0x0d, 0x63, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x3c, 0x0a, 0x07, 0x62,
	0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64,
	0x65, 0x76, 0x2e, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6a, 0x6f, 0x62,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x72,
	0x52, 0x07, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x12, 0x3a, 0x0a, 0x06, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64, 0x65, 0x76, 0x2e,
	0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6a, 0x6f, 0x62, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x72, 0x52, 0x06, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x73, 0x22, 0x49, 0x0a, 0x09, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x53, 0x69,
	0x6e, 0x6b, 0x12, 0x3c, 0x0a, 0x07, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x6a, 0x6f, 0x62, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x72, 0x52, 0x07, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73,
	0x42, 0x2e, 0x5a, 0x2c, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x64, 0x65,
	0x76, 0x2f, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x6a, 0x6f, 0x62, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_jobconfigpb_kafka_proto_rawDescOnce sync.Once
	file_jobconfigpb_kafka_proto_rawDescData = file_jobconfigpb_kafka_proto_rawDesc
)

func file_jobconfigpb_kafka_proto_rawDescGZIP() []byte {
	file_jobconfigpb_kafka_proto_rawDescOnce.Do(func() {
		file_jobconfigpb_kafka_proto_rawDescData = protoimpl.X.CompressGZIP(file_jobconfigpb_kafka_proto_rawDescData)
	})
	return file_jobconfigpb_kafka_proto_rawDescData
}

var file_jobconfigpb_kafka_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_jobconfigpb_kafka_proto_goTypes = []any{
	(*KafkaSource)(nil), // 0: dev.reduction.jobconfig.KafkaSource
	(*KafkaSink)(nil),   // 1: dev.reduction.jobconfig.KafkaSink
	(*StringVar)(nil),   // 2: dev.reduction.jobconfig.StringVar
}
var file_jobconfigpb_kafka_proto_depIdxs = []int32{
	2, // 0: dev.reduction.jobconfig.KafkaSource.consumer_group:type_name -> dev.reduction.jobconfig.StringVar
	2, // 1: dev.reduction.jobconfig.KafkaSource.brokers:type_name -> dev.reduction.jobconfig.StringVar
	2, // 2: dev.reduction.jobconfig.KafkaSource.topics:type_name -> dev.reduction.jobconfig.StringVar
	2, // 3: dev.reduction.jobconfig.KafkaSink.brokers:type_name -> dev.reduction.jobconfig.StringVar
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_jobconfigpb_kafka_proto_init() }
func file_jobconfigpb_kafka_proto_init() {
	if File_jobconfigpb_kafka_proto != nil {
		return
	}
	file_jobconfigpb_resolvable_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_jobconfigpb_kafka_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_jobconfigpb_kafka_proto_goTypes,
		DependencyIndexes: file_jobconfigpb_kafka_proto_depIdxs,
		MessageInfos:      file_jobconfigpb_kafka_proto_msgTypes,
	}.Build()
	File_jobconfigpb_kafka_proto = out.File
	file_jobconfigpb_kafka_proto_rawDesc = nil
	file_jobconfigpb_kafka_proto_goTypes = nil
	file_jobconfigpb_kafka_proto_depIdxs = nil
}
