// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        v5.29.3
// source: handlerpb/handler.proto

package handlerpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OnEventRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Event                *KeyedEvent            `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	StateEntryNamespaces []*StateEntryNamespace `protobuf:"bytes,2,rep,name=state_entry_namespaces,json=stateEntryNamespaces,proto3" json:"state_entry_namespaces,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *OnEventRequest) Reset() {
	*x = OnEventRequest{}
	mi := &file_handlerpb_handler_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OnEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnEventRequest) ProtoMessage() {}

func (x *OnEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_handlerpb_handler_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnEventRequest.ProtoReflect.Descriptor instead.
func (*OnEventRequest) Descriptor() ([]byte, []int) {
	return file_handlerpb_handler_proto_rawDescGZIP(), []int{0}
}

func (x *OnEventRequest) GetEvent() *KeyedEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *OnEventRequest) GetStateEntryNamespaces() []*StateEntryNamespace {
	if x != nil {
		return x.StateEntryNamespaces
	}
	return nil
}

type OnTimerExpiredRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Key                  []byte                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Timestamp            *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	StateEntryNamespaces []*StateEntryNamespace `protobuf:"bytes,3,rep,name=state_entry_namespaces,json=stateEntryNamespaces,proto3" json:"state_entry_namespaces,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *OnTimerExpiredRequest) Reset() {
	*x = OnTimerExpiredRequest{}
	mi := &file_handlerpb_handler_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OnTimerExpiredRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnTimerExpiredRequest) ProtoMessage() {}

func (x *OnTimerExpiredRequest) ProtoReflect() protoreflect.Message {
	mi := &file_handlerpb_handler_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnTimerExpiredRequest.ProtoReflect.Descriptor instead.
func (*OnTimerExpiredRequest) Descriptor() ([]byte, []int) {
	return file_handlerpb_handler_proto_rawDescGZIP(), []int{1}
}

func (x *OnTimerExpiredRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *OnTimerExpiredRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *OnTimerExpiredRequest) GetStateEntryNamespaces() []*StateEntryNamespace {
	if x != nil {
		return x.StateEntryNamespaces
	}
	return nil
}

type HandlerResponse struct {
	state                   protoimpl.MessageState    `protogen:"open.v1"`
	NewTimers               []*timestamppb.Timestamp  `protobuf:"bytes,1,rep,name=new_timers,json=newTimers,proto3" json:"new_timers,omitempty"`
	StateMutationNamespaces []*StateMutationNamespace `protobuf:"bytes,2,rep,name=state_mutation_namespaces,json=stateMutationNamespaces,proto3" json:"state_mutation_namespaces,omitempty"`
	SinkRequests            []*SinkRequest            `protobuf:"bytes,3,rep,name=sink_requests,json=sinkRequests,proto3" json:"sink_requests,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *HandlerResponse) Reset() {
	*x = HandlerResponse{}
	mi := &file_handlerpb_handler_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HandlerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandlerResponse) ProtoMessage() {}

func (x *HandlerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_handlerpb_handler_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandlerResponse.ProtoReflect.Descriptor instead.
func (*HandlerResponse) Descriptor() ([]byte, []int) {
	return file_handlerpb_handler_proto_rawDescGZIP(), []int{2}
}

func (x *HandlerResponse) GetNewTimers() []*timestamppb.Timestamp {
	if x != nil {
		return x.NewTimers
	}
	return nil
}

func (x *HandlerResponse) GetStateMutationNamespaces() []*StateMutationNamespace {
	if x != nil {
		return x.StateMutationNamespaces
	}
	return nil
}

func (x *HandlerResponse) GetSinkRequests() []*SinkRequest {
	if x != nil {
		return x.SinkRequests
	}
	return nil
}

type StateEntryNamespace struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Entries       []*StateEntry          `protobuf:"bytes,2,rep,name=entries,proto3" json:"entries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StateEntryNamespace) Reset() {
	*x = StateEntryNamespace{}
	mi := &file_handlerpb_handler_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StateEntryNamespace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateEntryNamespace) ProtoMessage() {}

func (x *StateEntryNamespace) ProtoReflect() protoreflect.Message {
	mi := &file_handlerpb_handler_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateEntryNamespace.ProtoReflect.Descriptor instead.
func (*StateEntryNamespace) Descriptor() ([]byte, []int) {
	return file_handlerpb_handler_proto_rawDescGZIP(), []int{3}
}

func (x *StateEntryNamespace) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *StateEntryNamespace) GetEntries() []*StateEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type StateEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           []byte                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         []byte                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StateEntry) Reset() {
	*x = StateEntry{}
	mi := &file_handlerpb_handler_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StateEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateEntry) ProtoMessage() {}

func (x *StateEntry) ProtoReflect() protoreflect.Message {
	mi := &file_handlerpb_handler_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateEntry.ProtoReflect.Descriptor instead.
func (*StateEntry) Descriptor() ([]byte, []int) {
	return file_handlerpb_handler_proto_rawDescGZIP(), []int{4}
}

func (x *StateEntry) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *StateEntry) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type StateMutationNamespace struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Mutations     []*StateMutation       `protobuf:"bytes,2,rep,name=mutations,proto3" json:"mutations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StateMutationNamespace) Reset() {
	*x = StateMutationNamespace{}
	mi := &file_handlerpb_handler_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StateMutationNamespace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateMutationNamespace) ProtoMessage() {}

func (x *StateMutationNamespace) ProtoReflect() protoreflect.Message {
	mi := &file_handlerpb_handler_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateMutationNamespace.ProtoReflect.Descriptor instead.
func (*StateMutationNamespace) Descriptor() ([]byte, []int) {
	return file_handlerpb_handler_proto_rawDescGZIP(), []int{5}
}

func (x *StateMutationNamespace) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *StateMutationNamespace) GetMutations() []*StateMutation {
	if x != nil {
		return x.Mutations
	}
	return nil
}

type StateMutation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Mutation:
	//
	//	*StateMutation_Delete
	//	*StateMutation_Put
	Mutation      isStateMutation_Mutation `protobuf_oneof:"mutation"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StateMutation) Reset() {
	*x = StateMutation{}
	mi := &file_handlerpb_handler_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StateMutation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateMutation) ProtoMessage() {}

func (x *StateMutation) ProtoReflect() protoreflect.Message {
	mi := &file_handlerpb_handler_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateMutation.ProtoReflect.Descriptor instead.
func (*StateMutation) Descriptor() ([]byte, []int) {
	return file_handlerpb_handler_proto_rawDescGZIP(), []int{6}
}

func (x *StateMutation) GetMutation() isStateMutation_Mutation {
	if x != nil {
		return x.Mutation
	}
	return nil
}

func (x *StateMutation) GetDelete() *DeleteMutation {
	if x != nil {
		if x, ok := x.Mutation.(*StateMutation_Delete); ok {
			return x.Delete
		}
	}
	return nil
}

func (x *StateMutation) GetPut() *PutMutation {
	if x != nil {
		if x, ok := x.Mutation.(*StateMutation_Put); ok {
			return x.Put
		}
	}
	return nil
}

type isStateMutation_Mutation interface {
	isStateMutation_Mutation()
}

type StateMutation_Delete struct {
	Delete *DeleteMutation `protobuf:"bytes,1,opt,name=delete,proto3,oneof"`
}

type StateMutation_Put struct {
	Put *PutMutation `protobuf:"bytes,2,opt,name=put,proto3,oneof"`
}

func (*StateMutation_Delete) isStateMutation_Mutation() {}

func (*StateMutation_Put) isStateMutation_Mutation() {}

type DeleteMutation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           []byte                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMutation) Reset() {
	*x = DeleteMutation{}
	mi := &file_handlerpb_handler_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMutation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMutation) ProtoMessage() {}

func (x *DeleteMutation) ProtoReflect() protoreflect.Message {
	mi := &file_handlerpb_handler_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMutation.ProtoReflect.Descriptor instead.
func (*DeleteMutation) Descriptor() ([]byte, []int) {
	return file_handlerpb_handler_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteMutation) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type PutMutation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           []byte                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         []byte                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PutMutation) Reset() {
	*x = PutMutation{}
	mi := &file_handlerpb_handler_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutMutation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutMutation) ProtoMessage() {}

func (x *PutMutation) ProtoReflect() protoreflect.Message {
	mi := &file_handlerpb_handler_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutMutation.ProtoReflect.Descriptor instead.
func (*PutMutation) Descriptor() ([]byte, []int) {
	return file_handlerpb_handler_proto_rawDescGZIP(), []int{8}
}

func (x *PutMutation) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *PutMutation) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type SinkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Value         []byte                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SinkRequest) Reset() {
	*x = SinkRequest{}
	mi := &file_handlerpb_handler_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SinkRequest) ProtoMessage() {}

func (x *SinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_handlerpb_handler_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SinkRequest.ProtoReflect.Descriptor instead.
func (*SinkRequest) Descriptor() ([]byte, []int) {
	return file_handlerpb_handler_proto_rawDescGZIP(), []int{9}
}

func (x *SinkRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SinkRequest) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type KeyEventRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         []byte                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeyEventRequest) Reset() {
	*x = KeyEventRequest{}
	mi := &file_handlerpb_handler_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyEventRequest) ProtoMessage() {}

func (x *KeyEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_handlerpb_handler_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyEventRequest.ProtoReflect.Descriptor instead.
func (*KeyEventRequest) Descriptor() ([]byte, []int) {
	return file_handlerpb_handler_proto_rawDescGZIP(), []int{10}
}

func (x *KeyEventRequest) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type KeyEventResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Events        []*KeyedEvent          `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeyEventResponse) Reset() {
	*x = KeyEventResponse{}
	mi := &file_handlerpb_handler_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyEventResponse) ProtoMessage() {}

func (x *KeyEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_handlerpb_handler_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyEventResponse.ProtoReflect.Descriptor instead.
func (*KeyEventResponse) Descriptor() ([]byte, []int) {
	return file_handlerpb_handler_proto_rawDescGZIP(), []int{11}
}

func (x *KeyEventResponse) GetEvents() []*KeyedEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type KeyedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           []byte                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Value         []byte                 `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeyedEvent) Reset() {
	*x = KeyedEvent{}
	mi := &file_handlerpb_handler_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyedEvent) ProtoMessage() {}

func (x *KeyedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_handlerpb_handler_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyedEvent.ProtoReflect.Descriptor instead.
func (*KeyedEvent) Descriptor() ([]byte, []int) {
	return file_handlerpb_handler_proto_rawDescGZIP(), []int{12}
}

func (x *KeyedEvent) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *KeyedEvent) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *KeyedEvent) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_handlerpb_handler_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_handlerpb_handler_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_handlerpb_handler_proto_rawDescGZIP(), []int{13}
}

var File_handlerpb_handler_proto protoreflect.FileDescriptor

var file_handlerpb_handler_proto_rawDesc = []byte{
	0x0a, 0x17, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x70, 0x62, 0x2f, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x64, 0x65, 0x76, 0x2e, 0x72,
	0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xab, 0x01, 0x0a, 0x0e, 0x4f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x4b, 0x65, 0x79, 0x65,
	0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x60, 0x0a,
	0x16, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x64, 0x65, 0x76, 0x2e, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x14, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x22,
	0xc5, 0x01, 0x0a, 0x15, 0x4f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x45, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x60, 0x0a, 0x16, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x72, 0x65, 0x64, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x52, 0x14, 0x73, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x22, 0x80, 0x02, 0x0a, 0x0f, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x6e,
	0x65, 0x77, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x6e, 0x65, 0x77,
	0x54, 0x69, 0x6d, 0x65, 0x72, 0x73, 0x12, 0x69, 0x0a, 0x19, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f,
	0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x64, 0x65, 0x76, 0x2e,
	0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x17, 0x73, 0x74, 0x61, 0x74, 0x65, 0x4d,
	0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x73, 0x12, 0x47, 0x0a, 0x0d, 0x73, 0x69, 0x6e, 0x6b, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x72,
	0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72,
	0x2e, 0x53, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0c, 0x73, 0x69,
	0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x70, 0x0a, 0x13, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x3b, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x34, 0x0a, 0x0a,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x7a, 0x0a, 0x16, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4d, 0x75, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x09, 0x6d, 0x75,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x64, 0x65, 0x76, 0x2e, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4d, 0x75, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x94,
	0x01, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x3f, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x12, 0x36, 0x0a, 0x03, 0x70, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x64, 0x65, 0x76, 0x2e, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x50, 0x75, 0x74, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x00, 0x52, 0x03, 0x70, 0x75, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x6d, 0x75, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x22, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x35, 0x0a, 0x0b, 0x50, 0x75, 0x74,
	0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x33, 0x0a, 0x0b, 0x53, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x27, 0x0a, 0x0f, 0x4b, 0x65, 0x79, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4d,
	0x0a, 0x10, 0x4b, 0x65, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x4b, 0x65, 0x79, 0x65, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x6e, 0x0a,
	0x0a, 0x4b, 0x65, 0x79, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x38, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x07, 0x0a,
	0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0xa8, 0x02, 0x0a, 0x07, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x72, 0x12, 0x58, 0x0a, 0x07, 0x4f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x2e,
	0x64, 0x65, 0x76, 0x2e, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x4f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x72, 0x65, 0x64, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x0e,
	0x4f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x12, 0x2c,
	0x2e, 0x64, 0x65, 0x76, 0x2e, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x4f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x45, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x64,
	0x65, 0x76, 0x2e, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x72, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x08, 0x4b, 0x65, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x26, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x4b, 0x65, 0x79, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x72,
	0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72,
	0x2e, 0x4b, 0x65, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x2b, 0x5a, 0x29, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x64,
	0x65, 0x76, 0x2f, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x72, 0x2f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_handlerpb_handler_proto_rawDescOnce sync.Once
	file_handlerpb_handler_proto_rawDescData = file_handlerpb_handler_proto_rawDesc
)

func file_handlerpb_handler_proto_rawDescGZIP() []byte {
	file_handlerpb_handler_proto_rawDescOnce.Do(func() {
		file_handlerpb_handler_proto_rawDescData = protoimpl.X.CompressGZIP(file_handlerpb_handler_proto_rawDescData)
	})
	return file_handlerpb_handler_proto_rawDescData
}

var file_handlerpb_handler_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_handlerpb_handler_proto_goTypes = []any{
	(*OnEventRequest)(nil),         // 0: dev.reduction.handler.OnEventRequest
	(*OnTimerExpiredRequest)(nil),  // 1: dev.reduction.handler.OnTimerExpiredRequest
	(*HandlerResponse)(nil),        // 2: dev.reduction.handler.HandlerResponse
	(*StateEntryNamespace)(nil),    // 3: dev.reduction.handler.StateEntryNamespace
	(*StateEntry)(nil),             // 4: dev.reduction.handler.StateEntry
	(*StateMutationNamespace)(nil), // 5: dev.reduction.handler.StateMutationNamespace
	(*StateMutation)(nil),          // 6: dev.reduction.handler.StateMutation
	(*DeleteMutation)(nil),         // 7: dev.reduction.handler.DeleteMutation
	(*PutMutation)(nil),            // 8: dev.reduction.handler.PutMutation
	(*SinkRequest)(nil),            // 9: dev.reduction.handler.SinkRequest
	(*KeyEventRequest)(nil),        // 10: dev.reduction.handler.KeyEventRequest
	(*KeyEventResponse)(nil),       // 11: dev.reduction.handler.KeyEventResponse
	(*KeyedEvent)(nil),             // 12: dev.reduction.handler.KeyedEvent
	(*Empty)(nil),                  // 13: dev.reduction.handler.Empty
	(*timestamppb.Timestamp)(nil),  // 14: google.protobuf.Timestamp
}
var file_handlerpb_handler_proto_depIdxs = []int32{
	12, // 0: dev.reduction.handler.OnEventRequest.event:type_name -> dev.reduction.handler.KeyedEvent
	3,  // 1: dev.reduction.handler.OnEventRequest.state_entry_namespaces:type_name -> dev.reduction.handler.StateEntryNamespace
	14, // 2: dev.reduction.handler.OnTimerExpiredRequest.timestamp:type_name -> google.protobuf.Timestamp
	3,  // 3: dev.reduction.handler.OnTimerExpiredRequest.state_entry_namespaces:type_name -> dev.reduction.handler.StateEntryNamespace
	14, // 4: dev.reduction.handler.HandlerResponse.new_timers:type_name -> google.protobuf.Timestamp
	5,  // 5: dev.reduction.handler.HandlerResponse.state_mutation_namespaces:type_name -> dev.reduction.handler.StateMutationNamespace
	9,  // 6: dev.reduction.handler.HandlerResponse.sink_requests:type_name -> dev.reduction.handler.SinkRequest
	4,  // 7: dev.reduction.handler.StateEntryNamespace.entries:type_name -> dev.reduction.handler.StateEntry
	6,  // 8: dev.reduction.handler.StateMutationNamespace.mutations:type_name -> dev.reduction.handler.StateMutation
	7,  // 9: dev.reduction.handler.StateMutation.delete:type_name -> dev.reduction.handler.DeleteMutation
	8,  // 10: dev.reduction.handler.StateMutation.put:type_name -> dev.reduction.handler.PutMutation
	12, // 11: dev.reduction.handler.KeyEventResponse.events:type_name -> dev.reduction.handler.KeyedEvent
	14, // 12: dev.reduction.handler.KeyedEvent.timestamp:type_name -> google.protobuf.Timestamp
	0,  // 13: dev.reduction.handler.Handler.OnEvent:input_type -> dev.reduction.handler.OnEventRequest
	1,  // 14: dev.reduction.handler.Handler.OnTimerExpired:input_type -> dev.reduction.handler.OnTimerExpiredRequest
	10, // 15: dev.reduction.handler.Handler.KeyEvent:input_type -> dev.reduction.handler.KeyEventRequest
	2,  // 16: dev.reduction.handler.Handler.OnEvent:output_type -> dev.reduction.handler.HandlerResponse
	2,  // 17: dev.reduction.handler.Handler.OnTimerExpired:output_type -> dev.reduction.handler.HandlerResponse
	11, // 18: dev.reduction.handler.Handler.KeyEvent:output_type -> dev.reduction.handler.KeyEventResponse
	16, // [16:19] is the sub-list for method output_type
	13, // [13:16] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_handlerpb_handler_proto_init() }
func file_handlerpb_handler_proto_init() {
	if File_handlerpb_handler_proto != nil {
		return
	}
	file_handlerpb_handler_proto_msgTypes[6].OneofWrappers = []any{
		(*StateMutation_Delete)(nil),
		(*StateMutation_Put)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_handlerpb_handler_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_handlerpb_handler_proto_goTypes,
		DependencyIndexes: file_handlerpb_handler_proto_depIdxs,
		MessageInfos:      file_handlerpb_handler_proto_msgTypes,
	}.Build()
	File_handlerpb_handler_proto = out.File
	file_handlerpb_handler_proto_rawDesc = nil
	file_handlerpb_handler_proto_goTypes = nil
	file_handlerpb_handler_proto_depIdxs = nil
}
